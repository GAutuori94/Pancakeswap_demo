@use 'base' as b;

/*Mixin button*/

@mixin button {
    align-items: center; // alla scritta piazzandola al centro
    border: 0px; // di base non c'è bordo, verrà aggiunto 
    border-radius: b.remConverter(16px); // resta così per tutti, verrà visualizzato diversamente nella navbar per via dell'altezza del div padre
    box-shadow: $boxShadow; // leggero box-shadow a sud dell'asse y
    cursor: pointer; // simula il link
    display: inline-flex; // serve per gestire l'allineamento con le arrowsvg
    font-family: inherit; //ereditano kanit
    font-size: b.$font-size-button;
    font-weight: b.$fontHeavyWeight;
    justify-content: center; //portano al centro il testo rispetto all'asse x
    letter-spacing: 0.03em;
    line-height: 1;
    opacity: 1;
    outline: 0px;
    transition: background-color 0.2s ease 0s, opacity 0.2s ease 0s; // con i valori impostati in precedenza ne gestiamo l'effetto di transizione di
    height: b.remConverter(48px);
    padding: 0px remConverter(24px);
    background-color: b.$primary;
    color: #ffffff;
    margin-right: b.remConverter(8px);
};

/*------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*Mixin toggle switch base*/

@mixin toggleSwitchBase {
    width: b.remConverter(56px);
    height: b.remcConverter(32px);
    display: flex;
    align-items: center;
    border-radius: b.remConverter(24px);
    box-shadow: b.$boxShadow;
    cursor: pointer;
    display: inline-flex;
    position: relative;
    transition: background-color 200ms ease 0s;
}

/*
-LIGHT MODE:
state: off --> background color: b.$light_input
state: on --> background color: b.$succes

-DARK MODE:
state: off --> background color: b.$dark_bgcolor_toggle
state: on --> background color: b.$success
*/

/*------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*Mixin toggle switch slider*/

/*state: OFF*/

@mixin toggleSwitchSlider {
    border-radius: 50%;
    cursor: pointer;
    height: b.remConverter(26px);
    width: b.remConverter(26px);
    position: absolute;
    left: b.remConverter(3px);
    top: b.remConverter(3px);
    transition: left 200ms ease-in 0s;
    z-index: 1;

    &:hover {
        box-shadow: b.$secondary 0px 0px 0px 1px, b.$secondary 0px 0px 0px 4px;
    }

}

/*state: ON 
    left: calc(100% - 30px)
*/

/*Background color:
Light mode: #FFFFFF;
Dark mode: #27262C

/*------------------------------------------------------------------------------------------------------------------------------------------------------------*/

.darkToggle {
    appearance: none;
    width: 30px;
    height: 30px;
    background: white;
    border-radius: 5px;
    border: 2px solid #555;
  }
  
  .darkToggle:checked {
    background: #333;
  }
  
  //classe che cambia effettivamente il background
  
  .dark {
    color: white;
    background: #444;
  }
  
  //STILE PER IL TOGGLE
  
  //transazione
  .ease {
    transition: all 300ms ease;
  }
  
  //classe che crea lo switcher
  .switch {
  
    position: relative;
    display: inline-block;
    width: 60px;
    height: 28px;
  }
  
  //classe che crea lo slider 
  .slider {
  
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: #bdc2c4;
    -webkit-transition: 0.4s;
    transition: 0.4s;
  
  }
  
  .switch input {
  
    opacity: 0;
    width: 0;
    height: 0;
  }
  
  //classe con pseudo che trasla il toggle a sinistra e cambia l'immagine con url
  .slider:before {
  
    background-image: url("/./Assets/asset\ 63.svg");
    background-position: center;
    position: absolute;
    background-repeat: no-repeat;
    content: "";
    height: 24px;
    width: 24px;
    left: 4px;
    bottom: 2px;
    background-color: #ffffff;
    -webkit-transition: 0.4s;
    transition: 0.4s;
  
  }
  
  // mette il sole nero di sfondo nel toggle quando la pagina è in dark mode
  input:checked+.slider {
  
    background-image: url("/Assets/asset\ 63\ copy.svg"); //è una copia di un asset esistente, con apposite modifiche per questa situazione
    background-repeat: no-repeat;
    background-position: left;
    background-color: #666171;
  
  }
  
  
  
  // mette luna bianca di sfondo nel toggle quando la pagina è in dark mode
  input:not(:checked)+.slider {
  
    background-image: url("/Assets/asset\ 64\ copy.svg"); //è una copia di un asset esistente, con apposite modifiche per questa situazione
    background-repeat: no-repeat;
    background-position: right;
    background-color: #bdc2c4;
  }
  
  input:checked+.slider:before {
  
    background-color: #000000;
    background-image: url("/Assets/asset\ 64.svg");
    background-position: center;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-items: center;
  
  }
  //crea il leddino viola attorno al toggle checked:focus(sulla luna)
  input:focus:checked+.slider:before { 
      box-shadow: 0 0 2px 4px rgb(122, 110, 170);
  }
  //crea il leddino viola attorno al toggle checked:hover(sulla luna)
  input:hover:checked+.slider:before { 
      box-shadow: 0 0 2px 4px rgb(122, 110, 170); 
  }
  
  //crea il leddino viola attorno al toggle checked:hover(sul sole)
  input:hover:not(:checked)+.slider:before {
      box-shadow: 0 0 2px 4px rgb(122, 110, 170);  
  } 
  
  //crea il leddino viola attorno al toggle checked:focus(sul sole)
  input:focus:not(:checked)+.slider:before {
      box-shadow: 0 0 2px 4px rgb(122, 110, 170);  
  } 
  
  
  input:checked+.slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
  }
  
  /* Rounded sliders */
  .slider.round {
    border-radius: 30px;
  }
  
  .slider.round:before {
  
    border-radius: 50%;
  }

  /* MODELLO HTML X IL TOGGLE LIGHT/DARK MODE

    <!--Qui ho importato delle classi da quello di Andrea label agganciato al darkToggle con una classe switch
            poi dentro un input type checkbox con id darkToggle e classe omonima lo span dentro al label slider 
            e round che rende lo span il toggle effettivo-->
        
            <label for="darkToggle" class="switch">
                <input type="checkbox" id="darkToggle" class="darkToggle">
                <span class="slider round"></span>
            </label>
          
          </main>
    
  */

/*------------------------------------------------------------------------------------------------------------------------------------------------------------*/

